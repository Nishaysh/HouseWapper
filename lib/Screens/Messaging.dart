//Massages to and from,
// import 'package:flutter/gestures.dart';
// import 'package:flutter/material.dart';
// import 'package:get/get.dart';
// import 'package:get/get_core/src/get_main.dart';

// import 'Login.dart';

// class Messaging extends StatefulWidget {
//   const Messaging({super.key});

//   @override
//   State<Messaging> createState() => _MessagingState();
// }

// class _MessagingState extends State<Messaging> {
//   @override
//   Widget build(BuildContext context) {
//     return SafeArea(
//       child: Scaffold(
//         body: Container(
//           alignment: Alignment.centerRight,
//           width: 700,
//           height: 600,
//           child: Center(
//             child: RichText(
//               text: TextSpan(
//                 text: 'Back To  ',
//                 style: const TextStyle(
//                     fontSize: 20,
//                     fontWeight: FontWeight.bold,
//                     color: Colors.black),
//                 children: [
//                   TextSpan(
//                       text: ' LogIn Page',
//                       style: const TextStyle(
//                           fontSize: 30,
//                           fontWeight: FontWeight.bold,
//                           color: Colors.red),
//                       recognizer: TapGestureRecognizer()
//                         ..onTap = () => Get.to(() => Login())),
//                 ],
//               ),
//             ),
//           ),
//         ),
//       ),
//     );
//   }
// }

// import 'package:flutter/material.dart';
// import 'package:cloud_firestore/cloud_firestore.dart';

// class ChatScreen extends StatefulWidget {
//   final String senderId;
//   final String receiverId;

//   ChatScreen({required this.senderId, required this.receiverId});

//   @override
//   _ChatScreenState createState() => _ChatScreenState();
// }

// class _ChatScreenState extends State<ChatScreen> {
//   final TextEditingController _textEditingController = TextEditingController();
//   final FirebaseFirestore _firestore = FirebaseFirestore.instance;

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: AppBar(
//         title: Text('Chat'),
//       ),
//       body: Column(
//         children: [
//           Expanded(
//             child: StreamBuilder<QuerySnapshot>(
//               stream: _firestore
//                   .collection('chats')
//                   .doc('${widget.senderId}-${widget.receiverId}')
//                   .collection('messages')
//                   .orderBy('timestamp', descending: true)
//                   .snapshots(),
//               builder: (context, snapshot) {
//                 if (snapshot.connectionState == ConnectionState.waiting) {
//                   return Center(
//                     child: CircularProgressIndicator(),
//                   );
//                 }
//                 if (!snapshot.hasData || snapshot.data?.docs.isEmpty == true) {
//                   return Center(
//                     child: Text('No messages available.'),
//                   );
//                 }

//                 List<DocumentSnapshot> messages = snapshot.data!.docs;
//                 return ListView.builder(
//                   reverse: true,
//                   itemCount: messages.length,
//                   itemBuilder: (context, index) {
//                     Map<String, dynamic> messageData =
//                         messages[index].data() as Map<String, dynamic>;
//                     String message = messageData['message'];
//                     String senderId = messageData['senderId'];
//                     String receiverId = messageData['receiverId'];
//                     return ListTile(
//                       title: Text(message ?? ''),
//                     );
//                   },
//                 );
//               },
//             ),
//           ),
//           Padding(
//             padding: EdgeInsets.symmetric(horizontal: 16.0),
//             child: Row(
//               children: [
//                 Expanded(
//                   child: TextField(
//                     controller: _textEditingController,
//                     decoration: InputDecoration(
//                       hintText: 'Type a message...',
//                     ),
//                   ),
//                 ),
//                 IconButton(
//                   icon: Icon(Icons.send),
//                   onPressed: () {
//                     String message = _textEditingController.text;
//                     _textEditingController.clear();
//                     _firestore
//                         .collection('chats')
//                         .doc('${widget.senderId}-${widget.receiverId}')
//                         .collection('messages')
//                         .doc() // Use document ID generated by Firestore
//                         .set({
//                       'message': message,
//                       'senderId': widget.senderId,
//                       'receiverId': widget.receiverId,
//                       'timestamp': FieldValue.serverTimestamp(),
//                     });
//                   },
//                 ),
//               ],
//             ),
//           ),
//         ],
//       ),
//     );
//   }
// }

// Import the necessary packages
import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

class SearchScreen extends StatefulWidget {
  @override
  _SearchScreenState createState() => _SearchScreenState();
}

class _SearchScreenState extends State<SearchScreen> {
  String _searchTerm = '';
  List<QueryDocumentSnapshot>?
      _searchResults; // Add null safety for _searchResults

  void _onSearch() async {
    // Clear previous search results
    setState(() {
      _searchResults =
          null; // Set _searchResults to null before querying Firestore
    });

    // Search for users in Firestore
    QuerySnapshot querySnapshot = await FirebaseFirestore.instance
        .collection('users')
        .where('username', isEqualTo: _searchTerm)
        .get();

    // Update search results
    setState(() {
      _searchResults = querySnapshot.docs;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Search'),
      ),
      body: Column(
        children: [
          Padding(
            padding: EdgeInsets.all(16.0),
            child: TextField(
              onChanged: (value) {
                setState(() {
                  _searchTerm = value;
                });
              },
              onSubmitted: (value) {
                _onSearch();
              },
              decoration: InputDecoration(
                labelText: 'Search for a buyer or seller',
                suffixIcon: IconButton(
                  onPressed: () {
                    _onSearch();
                  },
                  icon: Icon(Icons.search),
                ),
              ),
            ),
          ),
          Expanded(
            child: _searchResults ==
                    null // Add null safety check for _searchResults
                ? Center(
                    child: CircularProgressIndicator(),
                  )
                : ListView.builder(
                    itemCount: _searchResults!
                        .length, // Add null safety check for _searchResults
                    itemBuilder: (context, index) {
                      QueryDocumentSnapshot userSnapshot = _searchResults![
                          index]; // Add null safety check for _searchResults

                      String userId =
                          userSnapshot.id; // Access document ID directly
                      String name = userSnapshot['username']
                          as String; // Access 'name' field using square bracket notation

                      return ListTile(
                        title: Text(name),
                        onTap: () {
                          // Open chat screen with selected user
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => ChatScreen(
                                userId: userId,
                                name: name,
                              ),
                            ),
                          );
                        },
                      );
                    },
                  ),
          ),
        ],
      ),
    );
  }
}

class ChatScreen extends StatelessWidget {
  final String userId;
  final String name;

  ChatScreen({required this.userId, required this.name});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Chat with $name'),
      ),
      body: Center(
        child: Text('Chat screen for $name (User ID: $userId)'),
      ),
    );
  }
}
